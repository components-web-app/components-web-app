image: alpine:latest

cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
        - api/vendor/

stages:
    - build
    - test
    - review
    - dast
    - dev
    - production
    - performance
    - cleanup

before_script:
    - source ./bin/auto_devops.sh

build:
    stage: build
    image: docker:stable-git
    services:
        - docker:stable-dind
    variables:
        DOCKER_DRIVER: overlay2
    script:
        - install_dependencies
        - setup_docker
        - build
    only:
        - branches
    except:
        variables:
            - $BUILD_DISABLED

code_quality:
    stage: test
    image: docker:stable
    variables:
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    allow_failure: true
    services:
        - docker:stable-dind
    script:
        - setup_docker
        - api_code_quality
    artifacts:
        reports:
            codequality: gl-code-quality-report.json
        expire_in: 1 week
    dependencies: []
    only:
        - branches
    except:
        variables:
            - $CODE_QUALITY_DISABLED

dependency_scanning:
    stage: test
    image: docker:stable
    variables:
        DOCKER_DRIVER: overlay2
    allow_failure: true
    services:
        - docker:stable-dind
    script:
        - setup_docker
        - dependency_scanning
    artifacts:
        paths: [gl-dependency-scanning-report.json]
    only:
        - branches
    except:
        variables:
            - $DEPENDENCY_SCANNING_DISABLED

container_scanning:
    stage: test
    image: docker:stable
    variables:
        DOCKER_DRIVER: overlay2
    allow_failure: true
    services:
        - docker:stable-dind
    script:
        - setup_docker
        - container_scanning
    artifacts:
        paths: [gl-container-scanning-report.json]
    only:
        - branches
    except:
        variables:
            - $CONTAINER_SCANNING_DISABLED

sast:
    stage: test
    image: docker:stable
    variables:
        DOCKER_DRIVER: overlay2
    allow_failure: true
    services:
        - docker:stable-dind
    script:
        - setup_docker
        - sast
    artifacts:
        paths: [gl-sast-report.json]
    only:
        - branches
    except:
        variables:
            - $SAST_DISABLED

#behat:
#    stage: test
#    image: docker:stable
#    variables:
#        DOCKER_DRIVER: overlay2
#        DOCKER_TLS_CERTDIR: ""
#        COMPOSER_PACKAGIST_TOKEN: 1548c14cbc7ef945787cad19913d10ef73068d7cdc61ff19513bfb4f72ea
#        POSTGRES_USER: runner
#        POSTGRES_PASSWORD: "password"
#        POSTGRES_DB: test
#        POSTGRES_HOST_AUTH_METHOD: trust
#    allow_failure: false
#    services:
#        - docker:stable-dind
#        - postgres:latest
#    script:
#        - setup_test_db
#        - setup_docker
#        - behat_tests
#    dependencies: []
#    only:
#        - branches

review:
    tags:
        - ci
    stage: review
    script:
        - check_kube_domain
        - install_dependencies
        - download_chart
        - ensure_namespace
        - initialize_tiller
        - create_secret
        - deploy
        - persist_environment_url
    environment:
        name: review/$CI_COMMIT_REF_NAME
        url: https://$CI_PROJECT_PATH_SLUG-$CI_ENVIRONMENT_SLUG-review.$AUTO_DEVOPS_DOMAIN
        on_stop: stop_review
    artifacts:
        paths: [environment_url.txt]
    only:
        refs:
            - branches
        #kubernetes: active
    except:
        refs:
            - master
        variables:
            - $REVIEW_DISABLED

dast:
    stage: dast
    allow_failure: true
    image: registry.gitlab.com/gitlab-org/security-products/zaproxy
    variables:
        POSTGRES_DB: "false"
    script:
        - dast
    artifacts:
        paths: [gl-dast-report.json]
    only:
        refs:
            - branches
        kubernetes: active
    except:
        refs:
            - master
        variables:
            - $DAST_DISABLED

dev:
    tags:
        - ci
    retry: 1
    stage: dev
    script:
        - check_kube_domain
        - install_dependencies
        - download_chart
        - ensure_namespace
        - initialize_tiller
        - create_secret
        - deploy
    environment:
        name: dev
        url: https://$AUTO_DEVOPS_DOMAIN
    only:
        refs:
            - master
        #kubernetes: active
        variables:
            - $STAGING_ENABLED
    allow_failure: false
    
production_api:
    stage: production
    script:
        - check_kube_domain
        - install_dependencies
        - helm_init
        - ensure_namespace
        - initialize_tiller
        - create_secret
        - deploy_api
        - persist_environment_url
    environment:
        name: production
        url: https://$AUTO_DEVOPS_DOMAIN
    artifacts:
        paths: [environment_url.txt]
    when: manual
    retry: 1
    allow_failure: false
    only:
        refs:
            - master
    except:
        variables:
            - $PRODUCTION_API_DISABLED          

performance:
    stage: performance
    image: docker:stable
    variables:
        DOCKER_DRIVER: overlay2
    allow_failure: true
    services:
        - docker:stable-dind
    script:
        - setup_docker
        - performance
    artifacts:
        paths:
            - performance.json
            - sitespeed-results/
    only:
        refs:
            - branches
        kubernetes: active
    except:
        variables:
            - $PERFORMANCE_DISABLED

stop_review:
    tags:
        - ci
    stage: cleanup
    variables:
        GIT_STRATEGY: none
    script:
        - install_dependencies
        - initialize_tiller
        - delete
    environment:
        name: review/$CI_COMMIT_REF_NAME
        action: stop
    when: manual
    allow_failure: true
    only:
        refs:
            - branches
        #kubernetes: active
    except:
        refs:
            - master
        variables:
            - $REVIEW_DISABLED
