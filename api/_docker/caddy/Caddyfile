# Info: Reload in live Docker using `caddy reload --config /etc/caddy/Caddyfile --adapter caddyfile`

# Global
{
    # Debug
    {$DEBUG}
    # HTTP/3 support
    servers {
        protocol {
            experimental_http3
        }
    }
    auto_https disable_redirects
}

# define single site using environment variable
{$SERVER_NAME}, caddy-probe:80

# named matchers
@do_varnish_pass {
    header !X-Varnish
}
@health_check {
    expression {host}.matches('\\bcaddy-probe\\b')
    path /health-check
}

# customisable log level with environment
log {
    level {$LOG_LEVEL:"info"}
}

# preserve orders
route {
    respond @health_check "OK" 200

    root * /srv/api/public

    mercure {
        # Transport to use (default to Bolt)
        transport_url {$MERCURE_TRANSPORT_URL:bolt:///data/mercure.db}
        # Publisher JWT key
        publisher_jwt {env.MERCURE_PUBLISHER_JWT_KEY} {env.MERCURE_PUBLISHER_JWT_ALG}
        # Subscriber JWT key
        subscriber_jwt {env.MERCURE_SUBSCRIBER_JWT_KEY} {env.MERCURE_SUBSCRIBER_JWT_ALG}
        # Allow anonymous subscribers (double-check that it's what you want)
        anonymous
        # Enable the subscription API (double-check that it's what you want)
        subscriptions
        # Extra directives
        {$MERCURE_EXTRA_DIRECTIVES}
    }
    vulcain
    push

    # do the cache pass
    reverse_proxy @do_varnish_pass {
        to {$VARNISH_SERVICE:"cache-proxy"}
        health_path /healthz
        health_interval 5s
        health_timeout 20s
        health_status 200
        fail_duration 5s
        max_fails 2
        unhealthy_request_count 5
    }

    php_fastcgi unix//var/run/php/php-fpm.sock
    encode zstd gzip
    file_server
}
