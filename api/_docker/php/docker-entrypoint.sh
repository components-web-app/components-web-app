#!/bin/sh
set -e

# first arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
	set -- php-fpm "$@"
fi

if [ "$1" = 'php-fpm' ] || [ "$1" = 'php' ] || [ "$1" = 'bin/console' ]; then
	echo "* Configuring ini for environment '${APP_ENV:-undefined}'"
	if [ "$APP_ENV" != 'prod' ]; then
		PHP_INI_RECOMMENDED="$PHP_INI_DIR/php.ini-development"
		CWA_PHP_INI="$PHP_INI_DIR/cwa.conf.d/cwa.dev.ini"
	else
		PHP_INI_RECOMMENDED="$PHP_INI_DIR/php.ini-production"
    CWA_PHP_INI="$PHP_INI_DIR/cwa.conf.d/cwa.prod.ini"
	fi
	ln -sf "$CWA_PHP_INI" "$PHP_INI_DIR/conf.d/cwa.ini"
	ln -sf "$PHP_INI_RECOMMENDED" "$PHP_INI_DIR/php.ini"

  echo "* Updating file permissions"
	mkdir -p var/cache var/log var/storage/default var/database

	echo "$DATABASE_CA_CERT" > var/database/server-ca.pem
	echo "$DATABASE_CLIENT_CERT" > var/database/client-cert.pem
	echo "$DATABASE_CLIENT_KEY" > var/database/client-key.pem

	# Fail nicely if bound to mac host by docker-compose
	setfacl -R -m u:www-data:rwX -m u:"$(whoami)":rwX var || true
	setfacl -dR -m u:www-data:rwX -m u:"$(whoami)":rwX var || true

  chown -R www-data var/database/*
  chmod -R 0600 var/database/*

  # wait for caddy certs to add ca to trusted
	if [ "$APP_ENV" != 'prod' ]; then
		echo "* Waiting for ca certificate to be generated by Caddy"
		until ls -A /usr/local/share/ca-certificates > /dev/null 2>&1; do
			sleep 1
  	done
		update-ca-certificates

		echo "* Composer install (DEV)"
		composer install --prefer-dist --no-progress --no-interaction
	fi

  # Database: wait for it and run migrations
	echo "* Waiting for database to be ready..."
	ATTEMPTS_LEFT_TO_REACH_DATABASE=60
	until [ $ATTEMPTS_LEFT_TO_REACH_DATABASE -eq 0 ] || DATABASE_ERROR=$(bin/console dbal:run-sql "SELECT 1" 2>&1); do
		if [ $? -eq 255 ]; then
			# If the doctrine commands exits with 255, another (unrecoverable) error occurred, and we stop retrying
			ATTEMPTS_LEFT_TO_REACH_DATABASE=0
			break
		fi
		sleep 1
		ATTEMPTS_LEFT_TO_REACH_DATABASE=$((ATTEMPTS_LEFT_TO_REACH_DATABASE - 1))
		echo "?* Still waiting for database to be ready... Or maybe the database is not reachable. $ATTEMPTS_LEFT_TO_REACH_DATABASE attempts left."
	done

	if [ $ATTEMPTS_LEFT_TO_REACH_DATABASE -eq 0 ]; then
		echo "!* The database is not up or not reachable:"
		echo "!* $DATABASE_ERROR"
		exit 1
	else
		echo "* The database is now ready and reachable"
	fi

	if ls -A migrations/*.php >/dev/null 2>&1; then
		php bin/console doctrine:migrations:migrate --no-interaction
	fi

	if [ $DATABASE_LOAD_FIXTURES = 'true' ]; then
		php bin/console doctrine:fixtures:load --no-interaction
	fi
fi

exec docker-php-entrypoint "$@"
