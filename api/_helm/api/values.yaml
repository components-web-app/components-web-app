# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

php:
  image:
    repository: registry.gitlab.com/silverback-web-apps/cwa/php
    tag: ~
    pullPolicy: IfNotPresent
  env: prod
  debug: '0'
  secret: ""
  corsAllowOrigin: "^https?://.*?\\.example\\.com$"
  trustedHosts: "^.*\\.example\\.com$"
  trustedProxies:
    - "127.0.0.1"
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"
  mailer:
    email: 'noreply@example.com'
    dsn: 'null://null'
  jwt:
    secret: ''
    public: ''
    passphrase: ''
    samesite: 'lax'
  blackfire:
    id: ''
    token: ''
  databaseLoadFixtures: false
  # base64 encoded
  databaseSSL:
    ca: ~
    key: ~
    cert: ~
  resources:
    limits:
      memory: 256Mi
      cpu: 100m
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

caddy:
  image:
    repository: registry.gitlab.com/silverback-web-apps/cwa/caddy
    tag: ~
    pullPolicy: IfNotPresent
  # Mercure: You need the managed or the On Premise version to deploy more than one pod: https://mercure.rocks/docs/hub/cluster
  resources:
    limits:
      memory: 64Mi
      cpu: 100m
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# api deployment - both caddy and php containers
api:
  replicaCount: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  service:
    type: ClusterIP
    port: 80

# You may prefer using the managed version in production: https://mercure.rocks
mercure:
  corsOrigin: '*'
  jwtSecret: ~
  jwtKey:
    subscriber:
      key: 'my-key-that-must-be-at-least-256-bits'
      algorithm: ~
    publisher:
      key: 'my-key-that-must-be-at-least-256-bits'
      algorithm: ~
  publicUrl: ~
  url: https://example.com/.well-known/mercure
  # need paid managed solution to enable this feature for replication
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

# can be enabled for feature branches to avoid using prod database
postgresql:
  enabled: false
  image:
    tag: ~
  auth:
    postgresPassword: pg_root_password
    username: pg_user
    password: pg_password
    database: pg_database
  # if external and enabled is false - should be external in production
  url: 'pgsql://'
  primary:
    resources:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 20m
  readReplicas:
    resources:
      limits:
        memory: 100Mi
        cpu: 100m
      requests:
        memory: 50Mi
        cpu: 20m
  
varnish:
  enabled: true
  image:
    repository: registry.gitlab.com/silverback-web-apps/cwa/varnish
    tag: latest
    pullPolicy: Always
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
  resources:
    limits:
      memory: 60Mi
      cpu: 50m
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

blackfire:
  replicaCount: 1
  enabled: false
  image:
    repository: blackfire/blackfire
    tag: latest
    pullPolicy: Always
  server:
    id: ''
    token: ''
  resources:
    limits:
      memory: 128Mi
      cpu: 100m
    # requests:
    #   cpu: 100m
    #   memory: 128Mi


ingress:
  enabled: false
  annotations: { }
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api.example.com
      paths: [ ]
  tls: [ ]
    #  - secretName: api-example-tls
    #    hosts:
    #      - api.example.com

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: { }
  # fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: { }

tolerations: [ ]

affinity: { }

podAnnotations: { }
