# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

php:
  image:
    repository: registry.gitlab.com/silverback-web-apps/cwa/php
    tag: ~
    pullPolicy: IfNotPresent
  replicaCount: 1
  env: prod
  debug: '0'
  secret: ""
  corsAllowOrigin: "^https?://.*?\\.example\\.com$"
  trustedHosts: "^.*\\.example\\.com$"
  trustedProxies:
    - "127.0.0.1"
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"
  mailer:
    email: 'noreply@example.com'
    dsn: 'null://null'
  jwt:
    secret: ''
    public: ''
    passphrase: ''
  blackfire:
    id: ''
    token: ''
  databaseLoadFixtures: false

caddy:
  image:
    repository: registry.gitlab.com/silverback-web-apps/cwa/caddy
    tag: ~
    pullPolicy: IfNotPresent
  # Mercure: You need the managed or the On Premise version to deploy more than one pod: https://mercure.rocks/docs/hub/cluster
  replicaCount: 1

service:
  type: ClusterIP
  port: 80

# You may prefer using the managed version in production: https://mercure.rocks
mercure:
  jwtSecret: ~
  jwtKey:
    subscriber:
      key: 'CHANGE_ME'
      algorithm: ~
    publisher:
      key: 'CHANGE_ME'
      algorithm: ~
  publicUrl: ~
  url: https://example.com/.well-known/mercure

# can be enabled for feature branches to avoid using prod database
postgresql:
  enabled: false
  auth: 
    postgresPassword: ~
    username: ~
    password: ~
    database: ~
  # if external and enabled is false - should be external in production
  url: 'pgsql://'
  
varnish:
  enabled: true
  image:
    repository: registry.gitlab.com/silverback-web-apps/cwa/varnish
    tag: latest
    pullPolicy: Always
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80

blackfire:
  enabled: false
  image:
    repository: blackfire/blackfire
    tag: latest
    pullPolicy: Always
  server:
    id: ''
    token: ''

# remember with mercure to auto-scale we will need managed/on-premise
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: { }
  # fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api.example.com
      paths: [ ]
  tls: [ ]
    #  - secretName: api-example-tls
    #    hosts:
    #      - api.example.com

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    memory: 200Mi
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: { }

tolerations: [ ]

affinity: { }

podAnnotations: { }
