# https://www.ietf.org/archive/id/draft-nottingham-http-invalidation-01.txt
{
	{$CADDY_GLOBAL_CONFIG}

    cache {
        api {
			souin
		}

		cdn {
			{$CADDY_CACHE_CDN_CONFIG:strategy hard}
		}

		key {
		    hide
			template "CWA-{http.request.method}-{http.request.host}-{http.request.uri.path}-{http.request.uri.query}-{http.request.header.accept}-{http.request.cookie.api_component}"
		}

		default_cache_control "public, max-age=7200, stale-while-revalidate=604800, s-maxage=604800"

		{$CADDY_CACHE_EXTRA_CONFIG:otter}
	}

	frankenphp {
		{$FRANKENPHP_CONFIG}
	}
}

{$SERVER_NAME:localhost} {
	log {
		# Redact the authorization query parameter that can be set by Mercure
		format filter {
			request>uri query {
				replace authorization REDACTED
			}
		}
	}

	root * /app/public

	encode {
		zstd
		br
		gzip

		match {
			header Content-Type text/*
			header Content-Type application/json*
			header Content-Type application/javascript*
			header Content-Type application/xhtml+xml*
			header Content-Type application/atom+xml*
			header Content-Type application/rss+xml*
			header Content-Type image/svg+xml*
			# Custom formats supported
			header Content-Type application/ld+json*
		}
	}

	mercure {
		# Transport to use (default to Bolt)
		transport_url {$MERCURE_TRANSPORT_URL:bolt:///data/mercure.db}
		# Publisher JWT key
		publisher_jwt {env.MERCURE_PUBLISHER_JWT_KEY} {env.MERCURE_PUBLISHER_JWT_ALG}
		# Subscriber JWT key
		subscriber_jwt {env.MERCURE_SUBSCRIBER_JWT_KEY} {env.MERCURE_SUBSCRIBER_JWT_ALG}
		# Allow anonymous subscribers (double-check that it's what you want)
		anonymous
		# Enable the subscription API (double-check that it's what you want)
		subscriptions
		# Extra directives
		{$MERCURE_EXTRA_DIRECTIVES}
        # Cors origins
        cors_origins {$MERCURE_CORS_ORIGIN:*}
	}

	vulcain

    @use_cache expression `
        !path('/logout') &&
        (!method('BAN', 'PURGE') || client_ip({$CACHE_ACL:"10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "127.0.0.1"}))
    `

    cache @use_cache

	# Add links to the API docs and to the Mercure Hub if not set explicitly (e.g. the PWA)
	header ?Link `</docs.jsonld>; rel="http://www.w3.org/ns/hydra/core#apiDocumentation", </.well-known/mercure>; rel="mercure"`

	# Disable Topics tracking if not enabled explicitly: https://github.com/jkarlin/topics
	header ?Permissions-Policy "browsing-topics=()"

	# Matches requests for HTML documents, for static files and for Next.js files,
	# except for known API paths and paths with extensions handled by API Platform
	@app expression `
	    (
            header({'Accept': '*text/html*'})
            && !path(
                '/souin*',
                '/login_check',
                '/logout',
                '/docs*', '/graphql*', '/bundles*', '/contexts*', '/_profiler*', '/_wdt*',
                '*.json*', '*.html', '*.csv', '*.yml', '*.yaml', '*.xml'
            )
        )
        ||
        path(
            '/favicon.ico', '/logo.svg', '/pwa-*.png', '/maskable-icon-*.png', '/apple-touch-icon-*.png',
            '/robots.txt', '/sitemap*',
            '/manifest.json', '/manifest.webmanifest',
            '/_nuxt*', '/__nuxt*',
            '/*sw.js*', '/workbox-*.js*',
            '/_ipx/*',
            '/splash/*', '/fonts/*',
            '/.well-known/*'
           )
        ||
        query({'_rsc': '*'})
    `

	# Comment the following line if you don't want Next.js to catch requests for HTML documents.
	# In this case, they will be handled by the PHP app.
	reverse_proxy @app http://{$APP_UPSTREAM}

    @internal {
        header_regexp internal host ([A-Za-z\-0-9]+(?:\.local)?(?:\:[0-9]{1,4})?)
    }

    # we need the docs header to be accurate even if it was a server side load with php.local or caddy.local etc.
    request_header @internal host {$BROWSER_SERVER_NAME}

    php_server
}
