{
	{$CADDY_GLOBAL_OPTIONS}
    debug
	frankenphp {
		{$FRANKENPHP_CONFIG}
	}

	auto_https disable_redirects

	servers {
        trusted_proxies static {$CADDY_TRUSTED_PROXIES}
    }
}

{$CADDY_EXTRA_CONFIG}

caddy-probe.local:80 {
	@health_check {
	    header User-Agent "Varnish Health Probe"
        method HEAD
		path /health-check
	}
	# customisable log level with environment
    log {
        level {$LOG_LEVEL:"error"}
    }
    respond @health_check 200 {
        close
    }
}

{$SERVER_NAME:localhost} {
    @not_passed_varnish {
		header !X-Varnish
	}
    @has_passed_varnish {
		header X-Varnish 1
	}
    @internal {
        header_regexp internal host ([A-Za-z\-0-9]+(?:\.local)?(?:\:[0-9]{1,4})?)
    }
    # Matches requests for HTML documents, for static files and for Next.js files,
    # except for known API paths and paths with extensions handled by API Platform
    @app expression `
        (header({'Connection':'*Upgrade*'}) && header({'Upgrade':'websocket'})) ||
        (
            (header({'Accept': '*text/html*'}) || header({'Accept': 'text/x-vite-ping'}))
            && !path(
                '/souin*',
                '/login_check',
                '/logout',
                '/docs*', '/graphql*', '/bundles*', '/contexts*', '/_profiler*', '/_wdt*',
                '*.json*', '*.html', '*.csv', '*.yml', '*.yaml', '*.xml'
            )
        )
        ||
        path(
            '/favicon.ico', '/icon.png', '/logo.svg', '/pwa-*.png',
            '/robots.txt', '/sitemap*',
            '/manifest.json', '/manifest.webmanifest',
            '/_nuxt*', '/__nuxt*',
            '/*sw.js*', '/workbox-*.js*', '/_ipx/*'
           )
        ||
        query({'_rsc': '*'})
    `

	log {
		# Redact the authorization query parameter that can be set by Mercure
		format filter {
			request>uri query {
				replace authorization REDACTED
			}
		}
	}

	root * /app/public

	encode {
		zstd
		br
		gzip

		match {
			header Content-Type text/*
			header Content-Type application/json*
			header Content-Type application/javascript*
			header Content-Type application/xhtml+xml*
			header Content-Type application/atom+xml*
			header Content-Type application/rss+xml*
			header Content-Type image/svg+xml*
			# Custom formats supported
			header Content-Type application/ld+json*
		}
	}

	mercure @not_passed_varnish {
		# Transport to use (default to Bolt)
		transport_url {$MERCURE_TRANSPORT_URL:bolt:///data/mercure.db}
		# Publisher JWT key
		publisher_jwt {env.MERCURE_PUBLISHER_JWT_KEY} {env.MERCURE_PUBLISHER_JWT_ALG}
		# Subscriber JWT key
		subscriber_jwt {env.MERCURE_SUBSCRIBER_JWT_KEY} {env.MERCURE_SUBSCRIBER_JWT_ALG}
		# Allow anonymous subscribers (double-check that it's what you want)
		anonymous
		# Enable the subscription API (double-check that it's what you want)
		subscriptions
		# Extra directives
		{$MERCURE_EXTRA_DIRECTIVES}
        # Cors origins
        cors_origins {$MERCURE_CORS_ORIGIN:*}
	}

	vulcain @not_passed_varnish

	reverse_proxy @not_passed_varnish {
        header_up X-Varnish 1
        #health_uri /healthz
        #health_headers {
        #    X-Liveness caddy
        #}
	    to {$VARNISH_UPSTREAM}
	}

	# Add links to the API docs and to the Mercure Hub if not set explicitly (e.g. the PWA)
	header ?Link `</docs.jsonld>; rel="http://www.w3.org/ns/hydra/core#apiDocumentation", </.well-known/mercure>; rel="mercure"`

	# Disable Topics tracking if not enabled explicitly: https://github.com/jkarlin/topics
	header ?Permissions-Policy "browsing-topics=()"

	# Comment the following line if you don't want Next.js to catch requests for HTML documents.
	# In this case, they will be handled by the PHP app.
	reverse_proxy @app http://{$APP_UPSTREAM}

    # we need the docs header to be accurate even if it was a server side load with php.local or caddy.local etc.
    request_header @internal host {$BROWSER_SERVER_NAME}
    php_server
}
