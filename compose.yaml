services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    depends_on:
      - database
    restart: unless-stopped
    environment:
      APP_UPSTREAM: app:3000
      SERVER_NAME: ${SERVER_NAME:-localhost}, php.local:80, php.local:443, php:80, localhost:80
      # Will be needed for Server-side/internal loads to generate the doc headers
      BROWSER_SERVER_NAME: ${BROWSER_SERVER_NAME:-localhost}
      # CHANGES TO ENV TO MAP CADDY_MERCURE_JWT_SECRET NOW INSTEAD OF MERCURE_PUBLISHER_JWT_KEY
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # CHANGES TO ENV TO MAP CADDY_MERCURE_JWT_SECRET NOW INSTEAD OF MERCURE_SUBSCRIBER_JWT_KEY
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # CHANGES TO ENV TO MAP CADDY_MERCURE_CORS_ORIGIN NOW INSTEAD OF MERCURE_CORS_ORIGIN
      MERCURE_CORS_ORIGIN: ${CADDY_MERCURE_CORS_ORIGIN:-https://localhost}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      CADDY_TRUSTED_PROXIES: ${CADDY_TRUSTED_PROXIES:-127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^${SERVER_NAME:-example\.com|localhost}|php$$}
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=${POSTGRES_CHARSET:-utf8}
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php.local/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      VARNISH_UPSTREAM: ${VARNISH_UPSTREAM:-varnish:8080}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
    deploy:
      resources:
        limits:
          cpus: '0.5'
        reservations:
          cpus: '0.5'
    extra_hosts:
      - "php.local:127.0.0.1"
  
  app:
    image: ${IMAGES_PREFIX:-}app-app

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
    
  # Directs back to caddy which will send to php
  varnish:
    image: ${IMAGES_PREFIX:-}app-varnish
    build:
      context: ./api
      target: varnish
    restart: unless-stopped
    depends_on:
      - php
    environment:
      UPSTREAM: php
      UPSTREAM_PORT: 80
      PHP_SERVICE: php
      # same as php .env - perhaps read this in instead?
      CORS_ALLOW_ORIGIN: '^https?://(localhost|127\.0\.0\.1|cwa.local)(:[0-9]+)?$'
    tmpfs:
      - /usr/local/var/varnish:exec
    volumes:
      - ./api/frankenphp/varnish/conf/default.vcl:/tmp/varnish/conf/default.vcl:rw

volumes:
  caddy_data:
  caddy_config:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
