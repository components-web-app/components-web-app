apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cwa.fullname" . }}-pwa
  labels:
    {{- include "cwa.labelsPWA" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
   type: RollingUpdate
   rollingUpdate:
     maxSurge: 2
     maxUnavailable: "25%"
  selector:
    matchLabels:
      {{- include "cwa.selectorLabelsPWA" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "cwa.selectorLabelsPWA" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cwa.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-pwa
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.pwa.image.repository }}:{{ .Values.pwa.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pwa.image.pullPolicy }}
          env:
            - name: NUXT_PUBLIC_CWA_API_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "cwa.fullname" . }}
                  key: api-url
            - name: NUXT_PUBLIC_CWA_API_URL_BROWSER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "cwa.fullname" . }}
                  key: api-url-browser
            - name: NODE_ENV
              value: production
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          # check often but allow more failures to give startup time
          startupProbe:
            tcpSocket:
              port: http
            failureThreshold: 30
            periodSeconds: 5
          # once started up, wait 5 seconds and then check every 5 seconds
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          # we are only ready for connections if the login page is loading
          readinessProbe:
            httpGet:
              path: /_cwa/healthcheck
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
