## This has been modified from the API Platform template implementation
## More specifically from https://github.com/dunglas/demo-vulcain-api-platform
version: '3.8'

services:
  php:
    build:
      context: ./api
      target: cwa_php
    healthcheck:
      test: ./_docker/php/docker-healthcheck.sh
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    depends_on:
      - db
    restart: unless-stopped
    environment:
      BLACKFIRE_CLIENT_ID: ~
      BLACKFIRE_CLIENT_TOKEN: ~
      # TODO: Remove environment variable once recipe is added to recipes-contrib repository - exposes environment variable for flex PR endpoint
      SYMFONY_ENDPOINT: ~
      DATABASE_LOAD_FIXTURES: ${DATABASE_LOAD_FIXTURES:-false}
#    env_file:
#      - api/.env.local
    volumes:
      - ./api:/srv/api:rw,cached
      - ./api/var:/srv/api/var:rw,cached
      - ./api/_docker/php/conf.d/cwa.dev.ini:/usr/local/etc/php/conf.d/cwa/cwa.dev.ini
      # if you develop on Linux, you may use a bind-mounted host directory instead
      # - ./api/var:/srv/api/var:rw
      - php_socket:/var/run/php
      - caddy_ca:/usr/local/share/ca-certificates
  
  # essentially acting as a merged mercure/vulcain layer here with https
  caddy:
    build:
      context: api/
      target: cwa_caddy
    depends_on:
      - php
    environment:
      GLOBAL_DIRECTIVES: "auto_https disable_redirects"
      DEBUG: ~ # ~ or debug
      VARNISH_UPSTREAM: ${VARNISH_UPSTREAM:-cache-proxy:8080}
      SERVER_NAME: ${SERVER_NAME:-localhost:8443, localhost, caddy.local, :80}
      BROWSER_SERVER_NAME: ${BROWSER_SERVER_NAME:-localhost:8443}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-172.0.0.0/8 192.168.0.0/16 127.0.0.0/8 10.0.0.0/8}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-my-key-that-must-be-at-least-256-bits}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-my-key-that-must-be-at-least-256-bits}
      MERCURE_CORS_ORIGIN: 'https://localhost https://localhost:3000 http://localhost:3000'
      MERCURE_EXTRA_DIRECTIVES: |
        demo /srv/mercure-assets/
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
      - caddy_certs:/data/caddy/certificates/local
      - caddy_ca:/usr/local/share/ca-certificates
      - ./api/_docker/caddy/Caddyfile:/etc/caddy/Caddyfile:rw
      # added this volume binding as the dockerfile link does not appear to work in compose, hopefully will be OK in production - this note is to remind me this is a fix for dev
      - ./api/public:/srv/api/public:rw,cached
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-8080}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-8443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-8443}
        protocol: udp

  # Directs back to caddy which will send to php
  cache-proxy:
    build:
      context: ./api
      target: cwa_varnish
    restart: unless-stopped
    depends_on:
      - caddy
      - php
    environment:
      UPSTREAM: caddy
      UPSTREAM_PORT: 80
      PHP_SERVICE: php
    # for cors_allow_origin env variable sharing
    env_file:
      - api/.env.local
    tmpfs:
      - /usr/local/var/varnish:exec
    volumes:
      - ./api/_docker/varnish/conf/default.vcl:/tmp/varnish/conf/default.vcl:rw

  # In production the pwa is deployed separately, so we will not put behind caddy
  # We will use the caddy certs for localhost though in dev to serve over https
  app:
    build:
      context: ./app
      target: cwa_app
    restart: unless-stopped
    volumes:
      - ./app:/usr/src/app:rw,cached
      - caddy_certs:/certs:ro
      - /usr/src/app/.pnpm-store
      # - /usr/src/app/node_modules
      #- caddy_ca:/ca-certs
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      API_URL: ${API_URL:-https://caddy.local}
      API_URL_BROWSER: ${API_URL_BROWSER:-https://localhost:8443}
    ports:
      - target: 3000
        published: 443
        protocol: tcp
      - target: 24678
        published: 24678
        protocol: tcp
    links:
      - "caddy:caddy.local"

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_MULTIPLE_DATABASES=api,api_test
      - POSTGRES_USER=api-platform
      - POSTGRES_PASSWORD=CHANGE_ME
    volumes:
      - ./api/_docker/postgres-init-scripts:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data:rw,delegated
    ports:
      - target: 5432
        published: 5432
        protocol: tcp

  blackfire:
    image: blackfire/blackfire
    ports: ["8307"]
    environment:
      # Exposes BLACKFIRE_* environment variables from the host
      BLACKFIRE_SERVER_ID: ~
      BLACKFIRE_SERVER_TOKEN: ~
      # BLACKFIRE_LOG_LEVEL: 4
  
  smtp-relay:
    image: namshi/smtp
    restart: always
    ports:
      - "25:25"
    environment:
      RELAY_NETWORKS: ":10.0.0.0/8:127.0.0.0/8:172.22.0.0/12:192.0.0.0/8"


volumes:
  php_socket:
  caddy_data:
  caddy_config:
  caddy_certs:
  caddy_ca:
  db_data:
